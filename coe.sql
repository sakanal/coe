/*
Navicat MySQL Data Transfer

Source Server         : localhost
Source Server Version : 80028
Source Host           : localhost:3306
Source Database       : coe

Target Server Type    : MYSQL
Target Server Version : 80028
File Encoding         : 65001

Date: 2022-12-20 19:44:42
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for clazz
-- ----------------------------
DROP TABLE IF EXISTS `clazz`;
CREATE TABLE `clazz` (
  `id` int NOT NULL COMMENT '班级id',
  `cla_tea` int DEFAULT NULL COMMENT '教师id',
  `cla_stu` int DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `teacher_id` (`cla_tea`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- ----------------------------
-- Records of clazz
-- ----------------------------
INSERT INTO `clazz` VALUES ('1921802', '1', '1');
INSERT INTO `clazz` VALUES ('1921803', '1', '8');
INSERT INTO `clazz` VALUES ('1921804', '3', '8');
INSERT INTO `clazz` VALUES ('1921805', '1', '7');
INSERT INTO `clazz` VALUES ('1921806', '1', '4');

-- ----------------------------
-- Table structure for course
-- ----------------------------
DROP TABLE IF EXISTS `course`;
CREATE TABLE `course` (
  `id` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '课程id',
  `name` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '课程名称',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- ----------------------------
-- Records of course
-- ----------------------------
INSERT INTO `course` VALUES ('431e78c', '软件工程');
INSERT INTO `course` VALUES ('557a6dd', '操作系统原理');

-- ----------------------------
-- Table structure for exam
-- ----------------------------
DROP TABLE IF EXISTS `exam`;
CREATE TABLE `exam` (
  `id` int NOT NULL COMMENT '试卷id',
  `teacher_id` bigint DEFAULT NULL COMMENT '教师id',
  `clazz_id` int DEFAULT NULL COMMENT '班级id',
  `course_id` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '课程id',
  `start_time` datetime DEFAULT NULL COMMENT '考试开始时间',
  `end_time` datetime DEFAULT NULL COMMENT '考试结束时间',
  `time` time DEFAULT NULL COMMENT '考试时间',
  `quantity` int DEFAULT NULL COMMENT '试题量',
  `question` json DEFAULT NULL COMMENT '题目组id<题号，题目id>',
  `state` int NOT NULL DEFAULT '0' COMMENT '试卷状态（0：未开始，1：已开始，2：已结束）',
  PRIMARY KEY (`id`),
  KEY `teacher_id` (`teacher_id`),
  KEY `clazz_id` (`clazz_id`),
  KEY `course_id` (`course_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- ----------------------------
-- Records of exam
-- ----------------------------
INSERT INTO `exam` VALUES ('1001', '100001', '1921804', '557a6dd', '2022-05-22 19:21:23', '2022-05-22 19:21:23', '01:30:00', '5', '{\"1\": \"30\", \"2\": \"31\", \"3\": \"32\", \"4\": \"33\", \"5\": \"34\"}', '2');
INSERT INTO `exam` VALUES ('1002', '100001', '1921804', '557a6dd', '2022-05-22 19:21:23', '2022-06-09 19:21:23', '01:30:00', '5', '{\"1\": \"30\", \"2\": \"31\", \"3\": \"32\", \"4\": \"33\", \"5\": \"34\"}', '2');
INSERT INTO `exam` VALUES ('1003', '100001', '1921805', '557a6dd', '2022-05-22 19:21:23', '2022-07-22 19:21:23', '01:30:00', '5', '{\"1\": \"30\", \"2\": \"31\", \"3\": \"32\", \"4\": \"33\", \"5\": \"34\"}', '1');
INSERT INTO `exam` VALUES ('1004', '100001', '1921806', '557a6dd', '2022-05-22 19:21:23', '2022-07-22 19:21:23', '01:30:00', '5', '{\"1\": 21, \"2\": 30, \"3\": 20, \"4\": 14, \"5\": 29}', '1');
INSERT INTO `exam` VALUES ('1005', '100001', '1921806', '431e78c', '2022-05-22 19:21:23', '2022-07-22 19:21:23', '01:30:00', '5', '{\"1\": 21, \"2\": 30, \"3\": 20, \"4\": 14, \"5\": 29}', '1');
INSERT INTO `exam` VALUES ('1006', '100002', '1921804', '431e78c', '2022-05-22 19:21:23', '2022-07-22 19:21:23', '01:30:00', '5', '{\"1\": 21, \"2\": 30, \"3\": 20, \"4\": 14, \"5\": 29}', '1');
INSERT INTO `exam` VALUES ('1007', '100002', '1921806', '431e78c', '2022-05-22 19:21:23', '2022-07-22 19:21:23', '01:30:00', '5', '{\"1\": 21, \"2\": 30, \"3\": 20, \"4\": 14, \"5\": 29}', '1');
INSERT INTO `exam` VALUES ('1008', '100002', '1921804', '431e78c', '2022-05-22 19:21:23', '2022-07-22 19:21:23', '01:30:00', '5', '{\"1\": 21, \"2\": 30, \"3\": 20, \"4\": 14, \"5\": 29}', '1');
INSERT INTO `exam` VALUES ('1009', '100002', '1921806', '431e78c', '2022-06-04 19:21:23', '2022-05-22 19:21:23', '01:30:00', '5', '{\"1\": 21, \"2\": 30, \"3\": 20, \"4\": 14, \"5\": 29}', '2');
INSERT INTO `exam` VALUES ('1010', '100002', '1921806', '431e78c', '2022-06-04 19:21:23', '2022-05-22 19:21:23', '01:30:00', '5', '{\"1\": 21, \"2\": 30, \"3\": 20, \"4\": 14, \"5\": 29}', '2');
INSERT INTO `exam` VALUES ('116112', '100002', '1921804', '557a6dd', '2022-06-04 13:44:57', '2022-06-04 15:44:59', '02:00:02', '1', '{\"1\": 26}', '2');
INSERT INTO `exam` VALUES ('196499', '100001', '1921804', '557a6dd', '2022-06-04 13:43:37', '2022-06-04 15:43:39', '02:00:02', '1', '{\"1\": 7}', '2');
INSERT INTO `exam` VALUES ('516989', '100001', '1921804', '431e78c', '2022-06-07 00:00:00', '2022-06-07 23:00:00', '23:00:00', '10', '{\"1\": 7, \"2\": 34, \"3\": 26, \"4\": 6, \"5\": 41, \"6\": 24, \"7\": 45, \"8\": 23, \"9\": 2, \"10\": 52}', '2');
INSERT INTO `exam` VALUES ('523749', '100001', '1921804', '431e78c', '2022-06-06 00:00:00', '2022-06-06 23:36:16', '23:36:16', '4', '{\"1\": 38, \"2\": 36, \"3\": 37, \"4\": 35}', '2');
INSERT INTO `exam` VALUES ('777673', '100001', '1921804', '431e78c', '2022-06-07 16:31:02', '2022-06-07 16:59:09', '00:28:07', '10', '{\"1\": 19, \"2\": 4, \"3\": 28, \"4\": 45, \"5\": 38, \"6\": 48, \"7\": 41, \"8\": 24, \"9\": 11, \"10\": 3}', '2');
INSERT INTO `exam` VALUES ('804515', '100001', '1921804', '557a6dd', '2022-06-06 00:00:00', '2022-06-06 23:00:00', '23:00:00', '1', '{\"1\": 34}', '2');
INSERT INTO `exam` VALUES ('861661', '100001', '1921804', '557a6dd', '2022-06-05 00:00:00', '2022-06-05 02:00:00', '02:00:00', '1', '{\"1\": 31}', '2');
INSERT INTO `exam` VALUES ('951065', '100001', '1921805', '557a6dd', '2022-06-05 00:00:00', '2022-06-05 02:00:00', '02:00:00', '1', '{\"1\": 15}', '2');

-- ----------------------------
-- Table structure for exam_clazz
-- ----------------------------
DROP TABLE IF EXISTS `exam_clazz`;
CREATE TABLE `exam_clazz` (
  `id` int NOT NULL AUTO_INCREMENT,
  `exam_Id` int DEFAULT NULL,
  `clazz_Id` int DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- ----------------------------
-- Records of exam_clazz
-- ----------------------------
INSERT INTO `exam_clazz` VALUES ('1', '1001', '1921804');
INSERT INTO `exam_clazz` VALUES ('2', '1002', '1921804');
INSERT INTO `exam_clazz` VALUES ('3', '1003', '1921804');
INSERT INTO `exam_clazz` VALUES ('4', '1001', '1921805');

-- ----------------------------
-- Table structure for question_bank
-- ----------------------------
DROP TABLE IF EXISTS `question_bank`;
CREATE TABLE `question_bank` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '题目id',
  `teacher_id` bigint DEFAULT NULL COMMENT '出题教师id',
  `question` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '问题',
  `answers` json DEFAULT NULL,
  `real_answer` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '正确答案',
  `analysis` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '解析',
  `course_id` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '课程id',
  PRIMARY KEY (`id`) USING BTREE,
  KEY `teacher_id` (`teacher_id`) USING BTREE,
  KEY `course_id` (`course_id`) USING BTREE,
  CONSTRAINT `question_bank_ibfk_1` FOREIGN KEY (`teacher_id`) REFERENCES `teacher` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `question_bank_ibfk_2` FOREIGN KEY (`course_id`) REFERENCES `course` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE=InnoDB AUTO_INCREMENT=101 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC;

-- ----------------------------
-- Records of question_bank
-- ----------------------------
INSERT INTO `question_bank` VALUES ('1', '100001', '数据相异技术通常采用某种措施使输入数据多样化，在使用时通过表决机制将输入数据从失效输入空间转移到非失效输入空间，实现软件容错。（ ）', '{\"A\": {\"Id\": \"A\", \"answer\": \"正确\"}, \"B\": {\"Id\": \"B\", \"answer\": \"失败\"}}', '正确', '暂无官方题目解析', '431e78c');
INSERT INTO `question_bank` VALUES ('2', '100001', '使用白盒测试方法时，设计测试用例应根据（ ）。', '{\"A\": {\"Id\": \"A\", \"answer\": \"程序的内部逻辑\"}, \"B\": {\"Id\": \"B\", \"answer\": \"程序的复杂结构\"}, \"C\": {\"Id\": \"C\", \"answer\": \"程序的功能\"}, \"D\": {\"Id\": \"D\", \"answer\": \"使用说明书\"}}', '程序的内部逻辑', '白盒测试又称为结构测试或逻辑驱动测试，它允许测试人员利用程序内部的逻辑结构及有关信息来设计或选择测试用例，对程序所有的逻辑路径进行测试，故 A 选项正确。', '431e78c');
INSERT INTO `question_bank` VALUES ('3', '100001', '下列关于瀑布模型的描述正确的是（  ）。', '{\"A\": {\"Id\": \"A\", \"answer\": \"瀑布模型的核心是按照软件开发的时间顺序将问题简化。\"}, \"B\": {\"Id\": \"B\", \"answer\": \"瀑布模型具由于良好的灵活性。\"}, \"C\": {\"Id\": \"C\", \"answer\": \"瀑布模型采用结构化的分析与设计方法，将逻辑实现与物理实现分开。\"}, \"D\": {\"Id\": \"D\", \"answer\": \"利用瀑布模型，如果发现问题则修改的代价很低。\"}}', '瀑布模型采用结构化的分析与设计方法，将逻辑实现与物理实现分开。', '暂无官方题目解析', '431e78c');
INSERT INTO `question_bank` VALUES ('4', '100001', '可行性研究要进行一次 _____ 需求分析。', '{\"A\": {\"Id\": \"A\", \"answer\": \"详细的\"}, \"B\": {\"Id\": \"B\", \"answer\": \"全面的\"}, \"C\": {\"Id\": \"C\", \"answer\": \"简化的、压缩的\"}, \"D\": {\"Id\": \"D\", \"answer\": \"彻底的\"}}', '简化的、压缩的', '软件的可行性研究其实质是要进行一次简化、压缩了的需求分析、设计过程，要在较高层次上以较抽象的方式进行需求分析和设计过程。因此答案为C。', '431e78c');
INSERT INTO `question_bank` VALUES ('5', '100001', '用户界面设计的其中一个原则就是减轻用户的记忆负担。 请问这句话的说法是正确的吗？', '{\"A\": {\"Id\": \"A\", \"answer\": \"正确\"}, \"B\": {\"Id\": \"B\", \"answer\": \"错误\"}}', '正确', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('7', '100001', '以下UML视图中，用于描述系统物理架构并主要由软件实施工程师使用的diagram是___。', '{\"A\": {\"Id\": \"A\", \"answer\": \"class diagram\"}, \"B\": {\"Id\": \"B\", \"answer\": \"sequence diagram\"}, \"C\": {\"Id\": \"C\", \"answer\": \"deployment diagram\"}, \"D\": {\"Id\": \"D\", \"answer\": \"package diagram\"}}', 'deployment diagram', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('8', '100001', '变更控制是一项最重要的软件配置任务，其中 “ 检出 ” 和 ______ 处理实现了两个重要的变更控制要素，即存取控制和同步控制。', '{\"A\": {\"Id\": \"A\", \"answer\": \"登入\"}, \"B\": {\"Id\": \"B\", \"answer\": \"管理\"}, \"C\": {\"Id\": \"C\", \"answer\": \"填写变更要求\"}, \"D\": {\"Id\": \"D\", \"answer\": \"审查\"}}', '登入', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('9', '100001', '在HOLIS系统的范围定义例子中，指令性基线的含义是反映的是功能需求的范围约定', '{\"A\": {\"Id\": \"A\", \"answer\": \"是\"}, \"B\": {\"Id\": \"B\", \"answer\": \"否\"}}', '是', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('10', '100001', '面向对象建模得到的模型包含系统的3个要素，即静态结构、交互次序和数据变换（ ）', '{\"A\": {\"Id\": \"A\", \"answer\": \"正确\"}, \"B\": {\"Id\": \"B\", \"answer\": \"错误\"}}', '正确', '静态结构-对象模型。交互次序-动态模型。数据交换-功能模型。', '431e78c');
INSERT INTO `question_bank` VALUES ('11', '100001', '扇出是一个模块直接控制（调用）的模块数目，扇出过大意味着模块过分复杂，需要控制和协调过多的下级模块。\n', '{\"A\": {\"Id\": \"A\", \"answer\": \"正确\"}, \"B\": {\"Id\": \"B\", \"answer\": \"错误\"}}', '正确', '扇入是指直接调用该模块的上级模块的个数。扇入大表示模块的复用程序高。 扇出是指该模块直接调用的下级模块的个数。扇出大表示模块的复杂度高，需要控制和协调过多的下级模块。', '431e78c');
INSERT INTO `question_bank` VALUES ('12', '100001', '软件生存周期中，解决软件“怎么做”的阶段是（ ）', '{\"A\": {\"Id\": \"A\", \"answer\": \"软件设计\"}, \"B\": {\"Id\": \"B\", \"answer\": \"需求分析\"}, \"C\": {\"Id\": \"C\", \"answer\": \"软件测试\"}, \"D\": {\"Id\": \"D\", \"answer\": \"可行性研究\"}}', '软件设计', '软件设计是软件工程的重要阶段，是一个把软件需求转换为软件表示的过程。软件设计的基本目标是用比较抽象概括的方式确定目标系统如何完成预定的任务，即解决软件“怎么做”的问题。故本题答案为 A 选项。', '431e78c');
INSERT INTO `question_bank` VALUES ('13', '100001', 'Which of the items listed below is NOT one of the software engineering layers? _____', '{\"A\": {\"Id\": \"A\", \"answer\": \"Process\"}, \"B\": {\"Id\": \"B\", \"answer\": \"Manufacturing\"}, \"C\": {\"Id\": \"C\", \"answer\": \"Methods\"}, \"D\": {\"Id\": \"D\", \"answer\": \"Tools\"}}', 'Manufacturing', '软件工程三要素：方法（Methods）、工具（Tools）、过程（Process）', '431e78c');
INSERT INTO `question_bank` VALUES ('14', '100001', '确定测试计划是在 ( ) 阶段制定的 .', '{\"A\": {\"Id\": \"A\", \"answer\": \"总体设计\"}, \"B\": {\"Id\": \"B\", \"answer\": \"详细设计\"}, \"C\": {\"Id\": \"C\", \"answer\": \"编码\"}, \"D\": {\"Id\": \"D\", \"answer\": \"测试\"}}', '总体设计', '典型的总体设计过程包括下面9个步骤:设想供选择的方案、选取合理的方案、推荐最佳方案、功能分解、设计软件结构、设计数据库、制定测试计划、书写文档、审查和复审。', '431e78c');
INSERT INTO `question_bank` VALUES ('15', '100001', '在面向数据流的设计方法中，一般把数据流图中的数据划分为以下哪两种。', '{\"A\": {\"Id\": \"A\", \"answer\": \"数据流和事务流\"}, \"B\": {\"Id\": \"B\", \"answer\": \"变换流和数据流\"}, \"C\": {\"Id\": \"C\", \"answer\": \"变换流和事务流\"}, \"D\": {\"Id\": \"D\", \"answer\": \"控制流和事务流\"}}', '变换流和事务流', '信息沿着输入通路进入系统，同时将信息的外部形式转换成内部表示，然后通过变换中心处理，再沿着输出通路转换成外部形式化离开系统，具有这种特性的信息流称为变换流。', '431e78c');
INSERT INTO `question_bank` VALUES ('16', '100001', '对象是OO方法的核心，对象的类型有多种，通常把例如汽车、轮船、房屋等等，称之为( )。', '{\"A\": {\"Id\": \"A\", \"answer\": \"有形实体\"}, \"B\": {\"Id\": \"B\", \"answer\": \"作用\"}, \"C\": {\"Id\": \"C\", \"answer\": \"事件\"}, \"D\": {\"Id\": \"D\", \"answer\": \"性能说明\"}}', '有形实体', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('17', '100001', '若有一个计算类型的程序，它的输入量只有一个X，其范围是-1.0，1.0，现从输入的角度考虑一组测试用例：-1.001，-1.0，1.0，1.001。设计这组测试用例的方法是（）', '{\"A\": {\"Id\": \"A\", \"answer\": \"条件覆盖法\"}, \"B\": {\"Id\": \"B\", \"answer\": \"等价分类法\"}, \"C\": {\"Id\": \"C\", \"answer\": \"边界值分析法\"}, \"D\": {\"Id\": \"D\", \"answer\": \"错误推测法\"}}', '边界值分析法', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('18', '100001', '各种软件维护的类型中最重要的是 ( ) 。', '{\"A\": {\"Id\": \"A\", \"answer\": \"完善性维护\"}, \"B\": {\"Id\": \"B\", \"answer\": \"纠错性维护\"}, \"C\": {\"Id\": \"C\", \"answer\": \"适应性维护\"}, \"D\": {\"Id\": \"D\", \"answer\": \"预防性维护\"}}', '完善性维护', '用户提出新功能或修改已有功能的建议，需要进行完善性维护，这项维护通常占软件维护的大部分工作。', '431e78c');
INSERT INTO `question_bank` VALUES ('19', '100001', '判断下列类之间的相互关系，把相应编号填写在括号中。本科生 – 研究生（）', '{\"A\": {\"Id\": \"A\", \"answer\": \"整体-部分\"}, \"B\": {\"Id\": \"B\", \"answer\": \"一般-特殊\"}, \"C\": {\"Id\": \"C\", \"answer\": \"实例联接\"}, \"D\": {\"Id\": \"D\", \"answer\": \"都不是\"}}', '都不是', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('20', '100001', '系统流程图是描述 _____ 的工具。', '{\"A\": {\"Id\": \"A\", \"answer\": \"逻辑系统\"}, \"B\": {\"Id\": \"B\", \"answer\": \"程序系统\"}, \"C\": {\"Id\": \"C\", \"answer\": \"体系结构\"}, \"D\": {\"Id\": \"D\", \"answer\": \"物理系统\"}}', '物理系统', '系统流程图表达的是数据在系统各个部件之间的流动情况，而不是对数据进行加工处理的控制过程', '431e78c');
INSERT INTO `question_bank` VALUES ('21', '100002', '组成体系结构的主要要素是构成单元、连接方式和连接关系', '{\"A\": {\"Id\": \"A\", \"answer\": \"是\"}, \"B\": {\"Id\": \"B\", \"answer\": \"否\"}}', '是', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('22', '100002', '下面描述中，不属于软件危机表现的是', '{\"A\": {\"Id\": \"A\", \"answer\": \"软件过程不规范\"}, \"B\": {\"Id\": \"B\", \"answer\": \"软件开发生产率低\"}, \"C\": {\"Id\": \"C\", \"answer\": \"软件质量难以控制\"}, \"D\": {\"Id\": \"D\", \"answer\": \"软件成本不断提高\"}}', '软件过程不规范', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('23', '100002', '以下软件设计模式的应用场景中，属以下git命令中，用于显示工作区和当前分支文件的差异的命令是', '{\"A\": {\"Id\": \"A\", \"answer\": \"git diff\"}, \"B\": {\"Id\": \"B\", \"answer\": \"git diff HEAD HEAD^\"}, \"C\": {\"Id\": \"C\", \"answer\": \"git diff --cached\"}, \"D\": {\"Id\": \"D\", \"answer\": \"git diff HEAD\"}}', 'git diff HEAD', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('24', '100002', '关于简单工厂模式说法错误的是？', '{\"A\": {\"Id\": \"A\", \"answer\": \"简单工厂模式不适合开闭原则，增加新产品需要修改工厂类代码\"}, \"B\": {\"Id\": \"B\", \"answer\": \"简单工厂模式中需要建立一个抽象工厂类和多个具体工厂类\"}, \"C\": {\"Id\": \"C\", \"answer\": \"简单工厂模式中对象的创建集中在工厂类中，便于维护和扩展\"}, \"D\": {\"Id\": \"D\", \"answer\": \"简单工厂模式中对象的创建和使用分开，客户端无需创建对象\"}}', '简单工厂模式中需要建立一个抽象工厂类和多个具体工厂类', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('25', '100002', '软件产品线的概念是是满足特定市场或用户需求，具有公共可管理特性的产品的组合', '{\"A\": {\"Id\": \"A\", \"answer\": \"是\"}, \"B\": {\"Id\": \"B\", \"answer\": \"否\"}}', '是', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('26', '100002', 'Power Designer 是一个CASE工具。', '{\"A\": {\"Id\": \"A\", \"answer\": \"正确\"}, \"B\": {\"Id\": \"B\", \"answer\": \"错误\"}}', '正确', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('27', '100002', '在将E-R模型向关系模型转换的过程中，若将三个实体之间的多对多联系m:n:p转换为关系模式，则该关系模式的关键字为什么？', '{\"A\": {\"Id\": \"A\", \"answer\": \"任意两个实体的关键字的组合\"}, \"B\": {\"Id\": \"B\", \"answer\": \"任意一个实体的关键字\"}, \"C\": {\"Id\": \"C\", \"answer\": \"各实体的关键字的组合\"}, \"D\": {\"Id\": \"D\", \"answer\": \"某实体的其它属性\"}}', '各实体的关键字的组合', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('28', '100002', '采用瀑布模型进行系统开发的过程中，每个阶段都会产生不同的文档。以下关于产生这些文档的描述中，正确的是哪一个？', '{\"A\": {\"Id\": \"A\", \"answer\": \"外部设计评审报告在概要设计阶段产生\"}, \"B\": {\"Id\": \"B\", \"answer\": \"集成测评计划在程序设计阶段产生\"}, \"C\": {\"Id\": \"C\", \"answer\": \"系统计划和需求说明在详细设计阶段产生\"}, \"D\": {\"Id\": \"D\", \"answer\": \"在进行编码的同时，独立的设计单元测试计划\"}}', '在进行编码的同时，独立的设计单元测试计划', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('29', '100002', '以下哪种测试方法不属于白盒覆盖标准', '{\"A\": {\"Id\": \"A\", \"answer\": \"基本路径\"}, \"B\": {\"Id\": \"B\", \"answer\": \"边界值分析\"}, \"C\": {\"Id\": \"C\", \"answer\": \"循环覆盖\"}, \"D\": {\"Id\": \"D\", \"answer\": \"逻辑覆盖\"}}', '边界值分析', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('30', '100002', '在以下选项中，主要联系高层管理人员的信息系统是什么？', '{\"A\": {\"Id\": \"A\", \"answer\": \"MIS（管理信息系统）\"}, \"B\": {\"Id\": \"B\", \"answer\": \"DSS（决策支持系统）\"}, \"C\": {\"Id\": \"C\", \"answer\": \"EDPS（电子数据处理系统）\"}, \"D\": {\"Id\": \"D\", \"answer\": \"TPS（事务处理系统）\"}}', 'DSS（决策支持系统）', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('31', '100002', '下面不属于模型驱动开发技术的有？', '{\"A\": {\"Id\": \"A\", \"answer\": \"过程建模\"}, \"B\": {\"Id\": \"B\", \"answer\": \"数据建模\"}, \"C\": {\"Id\": \"C\", \"answer\": \"对象建模\"}, \"D\": {\"Id\": \"D\", \"answer\": \"业务建模\"}}', '业务建模', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('32', '100002', '需求分析是分析员经了解用户的要求，认真细致地调研、分析，最终建立目标系统的 逻辑模型并写出（）的过程。', '{\"A\": {\"Id\": \"A\", \"answer\": \"模块说明书\"}, \"B\": {\"Id\": \"B\", \"answer\": \"需求规格说明书\"}, \"C\": {\"Id\": \"C\", \"answer\": \"项目开发计划\"}, \"D\": {\"Id\": \"D\", \"answer\": \"合同文档\"}}', '需求规格说明书', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('33', '100002', '在软件开发过程中，我们可以采用不同的过程模型，下列有关增量模型描述正确的（）', '{\"A\": {\"Id\": \"A\", \"answer\": \"已使用一种线性开发模型，具有不可回溯性\"}, \"B\": {\"Id\": \"B\", \"answer\": \"把待开发的软件系统模块化，将每个模块作为一个增量组件，从而分批次地分析、设计、编码和测试这些增量组件\"}, \"C\": {\"Id\": \"C\", \"answer\": \"适用于已有产品或产品原型（样品），只需客户化的工程项目\"}, \"D\": {\"Id\": \"D\", \"answer\": \"适用于已有产品或产品原型（样品），只需客户化的工程项目\"}}', '把待开发的软件系统模块化，将每个模块作为一个增量组件，从而分批次地分析、设计、编码和测试这些增量组件', '概念问题 选B 增量模型是把待开发的软件系统模块化，将每个模块作为一个增量组件，从而分批次地分析、设计、编码和测试这些增量组件。运用增量模型的软件开发过程是递增式的过程。', '431e78c');
INSERT INTO `question_bank` VALUES ('34', '100002', '为了表示项目管理功能工作中各项任务之间的进度衔接关系，常用的计划管理工具是（ ）', '{\"A\": {\"Id\": \"A\", \"answer\": \"程序结构图\"}, \"B\": {\"Id\": \"B\", \"answer\": \"数据流图\"}, \"C\": {\"Id\": \"C\", \"answer\": \"E-R图\"}, \"D\": {\"Id\": \"D\", \"answer\": \"甘特（Gantt）图\"}}', '甘特（Gantt）图', '甘特图，也称为条状图(Bar chart)。是在1917年由亨利·甘特开发的，其内在思想简单，基本是一条线条图，横轴表示时间，纵轴表示活动(项目)，线条表示在整个期间上计划和实际的活动完成情况。', '431e78c');
INSERT INTO `question_bank` VALUES ('35', '100002', '软件可靠性预计是一个自上而下的归纳综合过程，而软件可靠性分配则是一个自下而上的演绎分解过程。软件可靠性的分配结果是可靠性预计的目标，可靠性预计的结果是可靠性分配与指标调整的基础。 （ ）', '{\"A\": {\"Id\": \"A\", \"answer\": \"正确\"}, \"B\": {\"Id\": \"B\", \"answer\": \"错误\"}}', '错误', '可靠性预计是一个由局部到整体、由小到大、由下到上的过程，是一个综合的过程；', '431e78c');
INSERT INTO `question_bank` VALUES ('36', '100002', '提高软件的可维护性可采用很多措施，下列哪个不在措施之列？（  ）', '{\"A\": {\"Id\": \"A\", \"answer\": \"提供没有错误的程序\"}, \"B\": {\"Id\": \"B\", \"answer\": \"建立质量保证制度\"}, \"C\": {\"Id\": \"C\", \"answer\": \"改进程序文档质量\"}, \"D\": {\"Id\": \"D\", \"answer\": \"明确软件质量标准\"}}', '提供没有错误的程序', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('37', '100002', '在软件测试中，白盒测试方法是通过分析程序的（）来设计测试用例的方法。', '{\"A\": {\"Id\": \"A\", \"answer\": \"应用范围\"}, \"B\": {\"Id\": \"B\", \"answer\": \"内部逻辑\"}, \"C\": {\"Id\": \"C\", \"answer\": \"功能\"}, \"D\": {\"Id\": \"D\", \"answer\": \"输入数据\"}}', '内部逻辑', '白盒测试又称结构测试、透明盒测试、逻辑驱动测试或基于代码的测试。白盒测试是一种测试用例设计方法，盒子指的是被测试的软件，白盒指的是盒子是可视的，你清楚盒子内部的东西以及里面是如何运作的。', '431e78c');
INSERT INTO `question_bank` VALUES ('38', '100002', '在软件开发过程中，我们可以采用不同的过程模型，下列有关增量模型描述正确的（）', '{\"A\": {\"Id\": \"A\", \"answer\": \"已使用一种线性开发模型，具有不可回溯性\"}, \"B\": {\"Id\": \"B\", \"answer\": \"把待开发的软件系统模块化，将每个模块作为一个增量组件，从而分批次地分析、设计、编码和测试这些增量组件\"}, \"C\": {\"Id\": \"C\", \"answer\": \"适用于已有产品或产品原型（样品），只需客户化的工程项目\"}, \"D\": {\"Id\": \"D\", \"answer\": \"软件开发过程每迭代一次，软件开发又前进一个层次\"}}', '把待开发的软件系统模块化，将每个模块作为一个增量组件，从而分批次地分析、设计、编码和测试这些增量组件', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('39', '100002', '在软件开发过程中，（）适用于事先不能完整定义需求的软件开发。', '{\"A\": {\"Id\": \"A\", \"answer\": \"演化模型\"}, \"B\": {\"Id\": \"B\", \"answer\": \"螺旋模型\"}, \"C\": {\"Id\": \"C\", \"answer\": \"瀑布模型\"}, \"D\": {\"Id\": \"D\", \"answer\": \"喷泉模型\"}}', '演化模型', '演化模型，针对实现不能完整定义需求的软件项目，利用迭代的思想，使软件逐步开发、逐步完善的机制，产品需求分解成多组，分批循环开发。', '431e78c');
INSERT INTO `question_bank` VALUES ('40', '100002', '下面（ ）不是数据字典的内容。', '{\"A\": {\"Id\": \"A\", \"answer\": \"程序\"}, \"B\": {\"Id\": \"B\", \"answer\": \"处理逻辑\"}, \"C\": {\"Id\": \"C\", \"answer\": \"数据结构\"}, \"D\": {\"Id\": \"D\", \"answer\": \"外部实体\"}}', '程序', '数据字典是指对数据的数据项、数据结构、数据流、数据存储、处理逻辑、外部实体等进行定义和描述，其目的是对数据流程图中的各个元素做出详细的说明，使用数据字典为简单的建模项目。', '431e78c');
INSERT INTO `question_bank` VALUES ('41', '100003', '可行性分析是在系统开发的早期所做的一项重要的论证工作，它是决定该系统是否开 发的决策依据，因必须给出（ ）的回答。', '{\"A\": {\"Id\": \"A\", \"answer\": \"确定\"}, \"B\": {\"Id\": \"B\", \"answer\": \"行或不行\"}, \"C\": {\"Id\": \"C\", \"answer\": \"正确\"}, \"D\": {\"Id\": \"D\", \"answer\": \"无二义\"}}', '行或不行', '可行性分析必须给出行或不行', '431e78c');
INSERT INTO `question_bank` VALUES ('42', '100003', '如果有些功能的执行时间很长，以下___最会让顾客感觉到等待很长时间。', '{\"A\": {\"Id\": \"A\", \"answer\": \"使用进度条显示当前执行进度的百分比\"}, \"B\": {\"Id\": \"B\", \"answer\": \"将鼠标指针变为漏斗形状\"}, \"C\": {\"Id\": \"C\", \"answer\": \"在等待过程中引导用户去做一些其他功能，等原功能执行完成后再返回\"}, \"D\": {\"Id\": \"D\", \"answer\": \"将该功能拆分为多步，每步执行结束后给用户展示中间结果\"}}', '将鼠标指针变为漏斗形状', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('43', '100003', 'Java数据库连接库JDBC用到哪种设计模式?', '{\"A\": {\"Id\": \"A\", \"answer\": \"生成器\"}, \"B\": {\"Id\": \"B\", \"answer\": \"桥接模式\"}, \"C\": {\"Id\": \"C\", \"answer\": \"抽象工厂\"}, \"D\": {\"Id\": \"D\", \"answer\": \"单例模式\"}}', '桥接模式', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('44', '100003', '常用的面向对象的软件过程模型是_______。', '{\"A\": {\"Id\": \"A\", \"answer\": \"瀑布模型\"}, \"B\": {\"Id\": \"B\", \"answer\": \"喷泉模型\"}, \"C\": {\"Id\": \"C\", \"answer\": \"原型模型\"}, \"D\": {\"Id\": \"D\", \"answer\": \"增量模型\"}}', '喷泉模型', '喷泉模型（fountain model）是一种以用户需求为动力，以对象为驱动的模型，主要用于描述面向对象的软件开发过程。该模型认为软件开发过程自下而上周期的各阶段是相互迭代和无间隙的特性。', '431e78c');
INSERT INTO `question_bank` VALUES ('45', '100003', 'CMMI覆盖的领域是（）', '{\"A\": {\"Id\": \"A\", \"answer\": \"服务行业\"}, \"B\": {\"Id\": \"B\", \"answer\": \"制造行业\"}, \"C\": {\"Id\": \"C\", \"answer\": \"流程性材料行业\"}, \"D\": {\"Id\": \"D\", \"answer\": \"软件产品开发及服务\"}}', '软件产品开发及服务', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('46', '100003', '软件的可行性研究中不包括（）。', '{\"A\": {\"Id\": \"A\", \"answer\": \"法律可行性\"}, \"B\": {\"Id\": \"B\", \"answer\": \"技术可行性\"}, \"C\": {\"Id\": \"C\", \"answer\": \"经济可行性\"}, \"D\": {\"Id\": \"D\", \"answer\": \"政治可行性\"}}', '政治可行性', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('47', '100003', '主要从（）几个方面进行系统可行性研究。', '{\"A\": {\"Id\": \"A\", \"answer\": \"技术可行性，经济可行性，操作可行性\"}, \"B\": {\"Id\": \"B\", \"answer\": \"技术可行性，经济可行性，系统可行性\"}, \"C\": {\"Id\": \"C\", \"answer\": \"经济可行性，系统可行性，操作可行性\"}, \"D\": {\"Id\": \"D\", \"answer\": \"经济可行性，系统可行性，时间可行性\"}}', '技术可行性，经济可行性，操作可行性', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('48', '100003', '下列选项中，（）不属于结构化分析方法所使用的工具。', '{\"A\": {\"Id\": \"A\", \"answer\": \"数据流图\"}, \"B\": {\"Id\": \"B\", \"answer\": \"判定表和判定树\"}, \"C\": {\"Id\": \"C\", \"answer\": \"系统流程图\"}, \"D\": {\"Id\": \"D\", \"answer\": \"用例图\"}}', '用例图', '结构化分析方法给出一组帮助系统分析人员产生功能规约的原理与技术。它一般利用图形表达用户需求，使用的手段主要有数据流图、数据字典、结构化语言、判定表以及判定树等。', '431e78c');
INSERT INTO `question_bank` VALUES ('49', '100003', '快速原型模型的主要特点之一是（）。', '{\"A\": {\"Id\": \"A\", \"answer\": \"开发完毕才见到产品\"}, \"B\": {\"Id\": \"B\", \"answer\": \"及早提供全部完整的软件产品\"}, \"C\": {\"Id\": \"C\", \"answer\": \"开发完毕后才见到工作软件\"}, \"D\": {\"Id\": \"D\", \"answer\": \"及早提供工作软件\"}}', '及早提供工作软件', '快速原型模型需要迅速建造一个可以运行的软件原型，也就是需要及早提高工作软件', '431e78c');
INSERT INTO `question_bank` VALUES ('50', '100003', '在变更控制中， ______ 可以用来确保由不同用户所执行的并发变更。', '{\"A\": {\"Id\": \"A\", \"answer\": \"异步控制\"}, \"B\": {\"Id\": \"B\", \"answer\": \"同步控制\"}, \"C\": {\"Id\": \"C\", \"answer\": \"存取控制\"}, \"D\": {\"Id\": \"D\", \"answer\": \"基线控制\"}}', '同步控制', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('51', '100003', '在软件维护工作中，如果对软件的修改只限制在原需求说明书的范围之内，这种维护是属于(  )。', '{\"A\": {\"Id\": \"A\", \"answer\": \"纠正性维护\"}, \"B\": {\"Id\": \"B\", \"answer\": \"适应性维护\"}, \"C\": {\"Id\": \"C\", \"answer\": \"完善性维护\"}, \"D\": {\"Id\": \"D\", \"answer\": \"预防性维护\"}}', '纠正性维护', '校正性维护 /纠错性维护(corrective maintenace)  只有在软件产品投入实际运行之后，随着时间的推移，用户才能逐渐发现测试阶段隐藏下来的错误 。', '431e78c');
INSERT INTO `question_bank` VALUES ('52', '100003', '在软件系统中，一个模块应具有什么样的功能，这是由_____决定的。', '{\"A\": {\"Id\": \"A\", \"answer\": \"总体设计\"}, \"B\": {\"Id\": \"B\", \"answer\": \"需求分析\"}, \"C\": {\"Id\": \"C\", \"answer\": \"详细设计\"}, \"D\": {\"Id\": \"D\", \"answer\": \"程序设计\"}}', '总体设计', '在软件系统中，一个模块具有什么功能，这是有总体设计完成的', '431e78c');
INSERT INTO `question_bank` VALUES ('53', '100003', '软件内部质量的特性中，以下哪几种是错误的？（）', '{\"A\": {\"Id\": \"A\", \"answer\": \"可靠性\"}, \"B\": {\"Id\": \"B\", \"answer\": \"易用性\"}, \"C\": {\"Id\": \"C\", \"answer\": \"实用性\"}, \"D\": {\"Id\": \"D\", \"answer\": \"效率性\"}}', '实用性', '该题暂无解析', '431e78c');
INSERT INTO `question_bank` VALUES ('54', '100003', '为两个相互独立的 C 源程序进行编译的两个进程，它们之间的关系正确的是', '{\"A\": {\"Id\": \"A\", \"answer\": \"可以并发执行，两者逻辑上有依赖关系\"}, \"B\": {\"Id\": \"B\", \"answer\": \"可以并发执行，两者逻辑上无依赖关系\"}, \"C\": {\"Id\": \"C\", \"answer\": \"不可以并发执行，但两者逻辑上有依赖关系\"}, \"D\": {\"Id\": \"D\", \"answer\": \"不可以并发执行，因为两个进程运行的是同一个编译程序。\"}}', '可以并发执行，两者逻辑上无依赖关系', '可并发执行的程序在一个数据集合上的运行过程，是系统进行资源分配和调度的一个独立单位。', '557a6dd');
INSERT INTO `question_bank` VALUES ('55', '100003', '为了允许不同用户的文件使用相同的文件名，通常采用（       ）的方法。', '{\"A\": {\"Id\": \"A\", \"answer\": \"重名翻译\"}, \"B\": {\"Id\": \"B\", \"answer\": \"多级目录\"}, \"C\": {\"Id\": \"C\", \"answer\": \"文件名到文件物理地址的映射\"}, \"D\": {\"Id\": \"D\", \"answer\": \"重名翻译 多级目录 文件名到文件物理地址的映射 索引表\"}}', '多级目录', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('56', '100003', '关于临界区，正确的说法是( ）', '{\"A\": {\"Id\": \"A\", \"answer\": \"访问不同临界资源的两个进程不要求必须互斥的进入临界区\"}, \"B\": {\"Id\": \"B\", \"answer\": \"临界区是包含临界资源的一段数据区\"}, \"C\": {\"Id\": \"C\", \"answer\": \"临界区是一种用于进程同步的机制\"}, \"D\": {\"Id\": \"D\", \"answer\": \"临界区是访问临界资源的一个进程或者线程\"}}', '访问不同临界资源的两个进程不要求必须互斥的进入临界区', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('57', '100003', '由于Cache不足而影响计算机系统性能的原因是（）', '{\"A\": {\"Id\": \"A\", \"answer\": \"数据由硬盘到cache的传输需要较长的时间\"}, \"B\": {\"Id\": \"B\", \"answer\": \"数据由外部设备到芯片组(chipset)的传输需要较长的时间\"}, \"C\": {\"Id\": \"C\", \"answer\": \"处理器的性能得不到充分发挥\"}, \"D\": {\"Id\": \"D\", \"answer\": \"指令不得不频繁地从硬盘加载\"}}', '处理器的性能得不到充分发挥', '是一个高速小容量的临时存储器，可以用高速的静态存储器芯片实现，或者集成到CPU芯片内部，存储CPU最经常访问的指令或者操作数据。', '557a6dd');
INSERT INTO `question_bank` VALUES ('58', '100003', 'PV操作与信号量处理有关，（）表示通过', '{\"A\": {\"Id\": \"A\", \"answer\": \"P\"}, \"B\": {\"Id\": \"B\", \"answer\": \"V\"}, \"C\": {\"Id\": \"C\", \"answer\": \"S\"}, \"D\": {\"Id\": \"D\", \"answer\": \"M\"}}', 'P', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('59', '100003', 'CPU 输出数据的速度远远高于打印机的打印速度，为解决这一矛盾，可采用（　　）', '{\"A\": {\"Id\": \"A\", \"answer\": \"并行技术\"}, \"B\": {\"Id\": \"B\", \"answer\": \"缓冲技术\"}, \"C\": {\"Id\": \"C\", \"answer\": \"虚拟存储器技术\"}, \"D\": {\"Id\": \"D\", \"answer\": \"覆盖技术\"}}', '缓冲技术', '缓冲技术可以解决cpu高速与打印机设备的低速矛盾。', '557a6dd');
INSERT INTO `question_bank` VALUES ('60', '100003', '下列选项中，降低进程优先级的合理时机是（）。', '{\"A\": {\"Id\": \"A\", \"answer\": \"进程的时间片用完\"}, \"B\": {\"Id\": \"B\", \"answer\": \"进程刚完成i/o，进入就绪列队\"}, \"C\": {\"Id\": \"C\", \"answer\": \"进程长期处于就绪列队中\"}, \"D\": {\"Id\": \"D\", \"answer\": \"进程从就绪状态转为运行状态\"}}', '进程的时间片用完', '进程时间片用完，可降低其优先级以让别的进程被调度进入执行状态', '557a6dd');
INSERT INTO `question_bank` VALUES ('61', '100003', '解决一个问题通常有多种方法。若说一个算法“有效”是指（ ）。', '{\"A\": {\"Id\": \"A\", \"answer\": \"这个算法能在一定的时间和空间资源限制内将问题解决\"}, \"B\": {\"Id\": \"B\", \"answer\": \"这个算法能在人的反应时间内将问题解决\"}, \"C\": {\"Id\": \"C\", \"answer\": \"这个算法比其他已知算法都更快地将问题解决\"}, \"D\": {\"Id\": \"D\", \"answer\": \"A和c\"}}', '这个算法能在一定的时间和空间资源限制内将问题解决', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('62', '100003', '使用SPOOLing系统的目的是为了提高（）的使用效率。', '{\"A\": {\"Id\": \"A\", \"answer\": \"操作系统\"}, \"B\": {\"Id\": \"B\", \"answer\": \"内存\"}, \"C\": {\"Id\": \"C\", \"answer\": \"CPU\"}, \"D\": {\"Id\": \"D\", \"answer\": \"i/o设备\"}}', 'i/o设备', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('63', '100004', '解决死锁问题通常意味着牺牲资源的效率。', '{\"A\": {\"Id\": \"A\", \"answer\": \"正确\"}, \"B\": {\"Id\": \"B\", \"answer\": \"错误\"}}', '正确', '解决死锁通常是释放部分进程资源，故牺牲了资源的效率', '557a6dd');
INSERT INTO `question_bank` VALUES ('64', '100004', '三个用户在同一系统中使用同一个编译程序同时对他们的 C 语言源程序进行编译，此时系统应分别为各用户创建一个 C\n编译进程并各保留一份 C 编译程序副本，这样的说法正确吗？', '{\"A\": {\"Id\": \"A\", \"answer\": \"正确\"}, \"B\": {\"Id\": \"B\", \"answer\": \"错误\"}}', '错误', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('65', '100004', '分页存储管理的存储保护是通过（）完成的。', '{\"A\": {\"Id\": \"A\", \"answer\": \"页表（页表寄存器）\"}, \"B\": {\"Id\": \"B\", \"answer\": \"快表\"}, \"C\": {\"Id\": \"C\", \"answer\": \"存储键\"}, \"D\": {\"Id\": \"D\", \"answer\": \"索引动态重定\"}}', '页表（页表寄存器）', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('66', '100004', '操作系统的实现策略是 （ ）', '{\"A\": {\"Id\": \"A\", \"answer\": \"硬件实现\"}, \"B\": {\"Id\": \"B\", \"answer\": \"软件实现\"}, \"C\": {\"Id\": \"C\", \"answer\": \"软硬结合\"}, \"D\": {\"Id\": \"D\", \"answer\": \"非软非硬\"}}', '软硬结合', '操作系统是覆盖在硬件上的第一层软件，管理计算机的硬件和软件资源，并向用户提供良好的界面。', '557a6dd');
INSERT INTO `question_bank` VALUES ('67', '100004', 'wp 系统是由（）发布的一款手机操作系统', '{\"A\": {\"Id\": \"A\", \"answer\": \"微软\"}, \"B\": {\"Id\": \"B\", \"answer\": \"IBM\"}, \"C\": {\"Id\": \"C\", \"answer\": \"谷歌\"}}', '微软', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('68', '100004', '程序访问内存的性能与下列哪个方面无关？', '{\"A\": {\"Id\": \"A\", \"answer\": \"内存总线的带宽\"}, \"B\": {\"Id\": \"B\", \"answer\": \"内存页面的访问特权级别\"}, \"C\": {\"Id\": \"C\", \"answer\": \"cPU片内cache大小\"}, \"D\": {\"Id\": \"D\", \"answer\": \"程序读写内存的连续性\"}}', '内存页面的访问特权级别', '内存页面的访问特权级别，和程序访问内存的性能没有关系。', '557a6dd');
INSERT INTO `question_bank` VALUES ('69', '100004', '\n在多进程的并发系统中，肯定不会因竞争(   )而产生死锁。', '{\"A\": {\"Id\": \"A\", \"answer\": \"打印机\"}, \"B\": {\"Id\": \"B\", \"answer\": \"磁带机\"}, \"C\": {\"Id\": \"C\", \"answer\": \"CPU\"}, \"D\": {\"Id\": \"D\", \"answer\": \"磁盘\"}}', 'CPU', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('70', '100004', '在程序执行过程中，( )控制计算机的运行总是处于取指令、分析指令和执行指令的循环之中。', '{\"A\": {\"Id\": \"A\", \"answer\": \"控制器\"}, \"B\": {\"Id\": \"B\", \"answer\": \"CPU\"}, \"C\": {\"Id\": \"C\", \"answer\": \"指令存储器\"}, \"D\": {\"Id\": \"D\", \"answer\": \"指令译码器\"}}', '控制器', '控制器根据用户预先编好的程序，依次从存储器中取出各条指令，放在指令寄存器IR中', '557a6dd');
INSERT INTO `question_bank` VALUES ('71', '100004', '下列关于指令系统说法错误的是___', '{\"A\": {\"Id\": \"A\", \"answer\": \"在计算机内部，程序是由一连串指令组成的\"}, \"B\": {\"Id\": \"B\", \"answer\": \"在计算机内部，程序是由一连串指令组成的\"}, \"C\": {\"Id\": \"C\", \"answer\": \"指令由两部分组成:操作码和操作数地址\"}, \"D\": {\"Id\": \"D\", \"answer\": \"因为兼容性问题，所有的ec机的cPu都具有相同的指令系统\"}}', '因为兼容性问题，所有的ec机的cPu都具有相同的指令系统', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('72', '100004', '进程执行的相对速度不能由进程自己来控制，这样的说法正确吗？', '{\"A\": {\"Id\": \"A\", \"answer\": \"正确\"}, \"B\": {\"Id\": \"B\", \"answer\": \"错误\"}}', '正确', '两个进程的相对速度取决于两个进程的相对复杂度和分配到的CPU时间。', '557a6dd');
INSERT INTO `question_bank` VALUES ('73', '100004', '页式存储管理系统中的页面大小是由（）决定的。', '{\"A\": {\"Id\": \"A\", \"answer\": \"用户\"}, \"B\": {\"Id\": \"B\", \"answer\": \"系统\"}, \"C\": {\"Id\": \"C\", \"answer\": \"系统和用户\"}, \"D\": {\"Id\": \"D\", \"answer\": \"不确定\"}}', '系统', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('74', '100004', '下面有关 Windows 操作系统多任务处理的叙述中，正确的是（）。', '{\"A\": {\"Id\": \"A\", \"answer\": \"用户如果只启动一个应用程序工作（如使用word写作），则该程序自始至终独占C PU\"}, \"B\": {\"Id\": \"B\", \"answer\": \"由于CPU具有多个执行部件，所以操作系统才能同时进行多个任务的处理\"}, \"C\": {\"Id\": \"C\", \"answer\": \"前台任务和后台任务都能得到CPU的响应\"}, \"D\": {\"Id\": \"D\", \"answer\": \"处理器调度程序根据各个应用程序运行所需要的时间多少来确定时间片的长短\"}}', '前台任务和后台任务都能得到CPU的响应', 'CPU调度程序不可能事先知道程序的运行时间 操作系统能同时处理多个任务依靠的是软件机制，就算是单核CPU也可以做到并发', '557a6dd');
INSERT INTO `question_bank` VALUES ('75', '100004', '\n对于任意n个作业，它们的平均带权周转时间最小值为( )。', '{\"A\": {\"Id\": \"A\", \"answer\": \"1\"}, \"B\": {\"Id\": \"B\", \"answer\": \"2\"}, \"C\": {\"Id\": \"C\", \"answer\": \"1/n\"}, \"D\": {\"Id\": \"D\", \"answer\": \"n\"}}', '1', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('76', '100004', '微型计算机硬件系统的性能主要取决于__________', '{\"A\": {\"Id\": \"A\", \"answer\": \"微处理器\"}, \"B\": {\"Id\": \"B\", \"answer\": \"内存储器\"}, \"C\": {\"Id\": \"C\", \"answer\": \"显示适配卡\"}, \"D\": {\"Id\": \"D\", \"answer\": \"硬磁盘存储器\"}}', '微处理器', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('77', '100004', '增加分配给进程的物理块数，不一定减少缺页次数，这样的说法正确吗？', '{\"A\": {\"Id\": \"A\", \"answer\": \"正确\"}, \"B\": {\"Id\": \"B\", \"answer\": \"错误\"}}', '正确', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('78', '100004', '关于现代操作系统的特征，并发性是指( ）', '{\"A\": {\"Id\": \"A\", \"answer\": \"若千个事件在同一时间间隔内发生\"}, \"B\": {\"Id\": \"B\", \"answer\": \"若千个事件在同一时间间隔内发生\"}, \"C\": {\"Id\": \"C\", \"answer\": \"若干个时间在同一时刻发生\"}, \"D\": {\"Id\": \"D\", \"answer\": \"若干个时间的发生是时间驱动的\"}}', '若千个事件在同一时间间隔内发生', '并发是指两个或多个事件在同一时间间隔发生，所以A正确', '557a6dd');
INSERT INTO `question_bank` VALUES ('79', '100004', '在 WINDOWS XP 中，下列四项中， __________ 不是文件的属性。', '{\"A\": {\"Id\": \"A\", \"answer\": \"系统\"}, \"B\": {\"Id\": \"B\", \"answer\": \"隐藏\"}, \"C\": {\"Id\": \"C\", \"answer\": \"只读\"}, \"D\": {\"Id\": \"D\", \"answer\": \"存档\"}}', '系统', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('80', '100004', '若所有作业同时到达，则平均等待时间最短的调度算法是（）', '{\"A\": {\"Id\": \"A\", \"answer\": \"先来先服务法\"}, \"B\": {\"Id\": \"B\", \"answer\": \"优先级法\"}, \"C\": {\"Id\": \"C\", \"answer\": \"最高相应比优先法\"}, \"D\": {\"Id\": \"D\", \"answer\": \"短作业优先法\"}}', '短作业优先法', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('81', '100004', '1946年首台电子数字计算机ENIAC问世后，冯·诺依曼(Von Neumann)在研制EDVAC计算机时，提出两个重要的改进，它们是（）。', '{\"A\": {\"Id\": \"A\", \"answer\": \"引入CPU和内存储器的概念\"}, \"B\": {\"Id\": \"B\", \"answer\": \"采用机器语言和十六进制\"}, \"C\": {\"Id\": \"C\", \"answer\": \"采用二进制和存储程序控制的概念\"}, \"D\": {\"Id\": \"D\", \"answer\": \"采用AsCI工编码系统\"}}', '采用二进制和存储程序控制的概念', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('82', '100004', '进程从运行状态进入就绪状态的原因可能是 。', '{\"A\": {\"Id\": \"A\", \"answer\": \"时间片用完\"}, \"B\": {\"Id\": \"B\", \"answer\": \"被选中占有cPU\"}, \"C\": {\"Id\": \"C\", \"answer\": \"时间片用完 被选中占有cPU 等待某一事件 等待的事件已经发生\"}, \"D\": {\"Id\": \"D\", \"answer\": \"等待的事件已经发生\"}}', '时间片用完', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('83', '100004', '在操作系统中，对信号量S的P原语操作定义中，使进程进入相应等待队列等待的条件是（操作过后S的值）（） 。', '{\"A\": {\"Id\": \"A\", \"answer\": \"s>0\"}, \"B\": {\"Id\": \"B\", \"answer\": \"s=0\"}, \"C\": {\"Id\": \"C\", \"answer\": \"S<0\"}, \"D\": {\"Id\": \"D\", \"answer\": \"S<=0\"}}', 'S<0', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('84', '100004', '（  ）是独立于CPU的指令集,它可以被高效地转换为特定于某种CPU的代码.', '{\"A\": {\"Id\": \"A\", \"answer\": \"CLR\"}, \"B\": {\"Id\": \"B\", \"answer\": \"CLS\"}, \"C\": {\"Id\": \"C\", \"answer\": \"MS工LMicrosoft中间语言\"}, \"D\": {\"Id\": \"D\", \"answer\": \"XML web service\"}}', 'MS工LMicrosoft中间语言', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('85', '100004', '进程A、B共享变量x，需要互斥执行；进程B、C共享变量y，B、C也需要互斥执行，因此进程A、C必须互斥执行。', '{\"A\": {\"Id\": \"A\", \"answer\": \"正确\"}, \"B\": {\"Id\": \"B\", \"answer\": \"错误\"}}', '错误', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('86', '100004', '下列哪一项不是操作系统的作用（）？', '{\"A\": {\"Id\": \"A\", \"answer\": \"作为用户与硬件之间的接口\"}, \"B\": {\"Id\": \"B\", \"answer\": \"管理计算机系统的各类资源\"}, \"C\": {\"Id\": \"C\", \"answer\": \"实现用户的应用功能\"}, \"D\": {\"Id\": \"D\", \"answer\": \"实现对计算机资源的抽象\"}}', '实现用户的应用功能', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('87', '100004', '虚拟存储技术与（ ）不能配合使用。', '{\"A\": {\"Id\": \"A\", \"answer\": \"分区管理\"}, \"B\": {\"Id\": \"B\", \"answer\": \"分页管理\"}, \"C\": {\"Id\": \"C\", \"answer\": \"段式管理\"}, \"D\": {\"Id\": \"D\", \"answer\": \"段页式管理\"}}', '分区管理', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('88', '100004', '访问磁盘的时间不包括（）。', '{\"A\": {\"Id\": \"A\", \"answer\": \"寻道时间\"}, \"B\": {\"Id\": \"B\", \"answer\": \"CPU调度时间\"}, \"C\": {\"Id\": \"C\", \"answer\": \"读写时间\"}, \"D\": {\"Id\": \"D\", \"answer\": \"旋转延迟时间\"}}', 'CPU调度时间', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('89', '100004', '\nUNIX 属于下列哪一类操作系统？', '{\"A\": {\"Id\": \"A\", \"answer\": \"单用户单任务\"}, \"B\": {\"Id\": \"B\", \"answer\": \"单用户多任务\"}, \"C\": {\"Id\": \"C\", \"answer\": \"多用户\"}, \"D\": {\"Id\": \"D\", \"answer\": \"批处理\"}}', '多用户', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('90', '100004', '在各种作业调度算法中 , 若所有作业同时到达 , 则平均周转时间最短的算法是（ ）。', '{\"A\": {\"Id\": \"A\", \"answer\": \"先来先服务调度算法\"}, \"B\": {\"Id\": \"B\", \"answer\": \"高优先级优先调度算法\"}, \"C\": {\"Id\": \"C\", \"answer\": \"多级反馈队列调度算法\"}, \"D\": {\"Id\": \"D\", \"answer\": \"短作业优先调度算法\"}}', '短作业优先调度算法', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('91', '100001', '中断处理和子程序调用都需要压栈以保护现场，中断处理一定会保存而子程序调用不需 要保存其内容的是（）。', '{\"A\": {\"Id\": \"A\", \"answer\": \"程序计数器\"}, \"B\": {\"Id\": \"B\", \"answer\": \"程序状态字寄存器\"}, \"C\": {\"Id\": \"C\", \"answer\": \"通用数据寄存器\"}, \"D\": {\"Id\": \"D\", \"answer\": \"通用地址寄存器\"}}', '程序状态字寄存器', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('92', '100001', '可顺序存取的文件不一定能随机存取，但是，凡是可以随机存取的文件都可以顺序存取。', '{\"A\": {\"Id\": \"A\", \"answer\": \"正确\"}, \"B\": {\"Id\": \"B\", \"answer\": \"错误\"}}', '错误', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('93', '100001', '操作系统负责管理计算机系统中的（）', '{\"A\": {\"Id\": \"A\", \"answer\": \"功能\"}, \"B\": {\"Id\": \"B\", \"answer\": \"资源\"}, \"C\": {\"Id\": \"C\", \"answer\": \"程序\"}, \"D\": {\"Id\": \"D\", \"answer\": \"进程\"}}', '资源', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('94', '100001', '用V操作唤醒一个等待进行程时， 被 唤醒进程的状态转换为（） 。', '{\"A\": {\"Id\": \"A\", \"answer\": \"等待\"}, \"B\": {\"Id\": \"B\", \"answer\": \"就绪\"}, \"C\": {\"Id\": \"C\", \"answer\": \"运行\"}, \"D\": {\"Id\": \"D\", \"answer\": \"完成\"}}', '就绪', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('95', '100001', '\n必须在分时系统的情况下，进程才能并发执行。 （）', '{\"A\": {\"Id\": \"A\", \"answer\": \"正确\"}, \"B\": {\"Id\": \"B\", \"answer\": \"错误\"}}', '错误', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('96', '100001', '操作系统是控制应用程序的执行，并充当应用程序和计算机硬件之间的接口，这种说法正确吗？', '{\"A\": {\"Id\": \"A\", \"answer\": \"正确\"}, \"B\": {\"Id\": \"B\", \"answer\": \"不正确\"}}', '正确', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('97', '100001', '以下不需要硬件支持的是', '{\"A\": {\"Id\": \"A\", \"answer\": \"进程调度\"}, \"B\": {\"Id\": \"B\", \"answer\": \"中断系统\"}, \"C\": {\"Id\": \"C\", \"answer\": \"地址映射\"}, \"D\": {\"Id\": \"D\", \"answer\": \"时钟管理\"}}', '进程调度', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('98', '100001', '下列调整中，不可能导致饥饿现象的是', '{\"A\": {\"Id\": \"A\", \"answer\": \"时间片转移\"}, \"B\": {\"Id\": \"B\", \"answer\": \"静态优先及调度\"}, \"C\": {\"Id\": \"C\", \"answer\": \"非抢占式作业优先\"}, \"D\": {\"Id\": \"D\", \"answer\": \"抢占式短作业优先\"}}', '时间片转移', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('99', '100001', '当某进程执行P操作时，首先对S信号量减1，当S ≤ 0 时表示资源得不到满足，系统将执行P操作的进程插入等待队列（    ）', '{\"A\": {\"Id\": \"A\", \"answer\": \"正确\"}, \"B\": {\"Id\": \"B\", \"answer\": \"错误\"}}', '错误', '该题暂无解析', '557a6dd');
INSERT INTO `question_bank` VALUES ('100', '100001', '下列关于文件索引结构的叙述中,哪个是错误的?', '{\"A\": {\"Id\": \"A\", \"answer\": \"系统为每个文件建立一张索引表\"}, \"B\": {\"Id\": \"B\", \"answer\": \"采用索引结构会引入存储开销\"}, \"C\": {\"Id\": \"C\", \"answer\": \"从文件控制块中可以找到索引表或索引表的地址\"}, \"D\": {\"Id\": \"D\", \"answer\": \"采用索引结构,逻辑上连续的文件存放在连续的物理块中\"}}', '采用索引结构,逻辑上连续的文件存放在连续的物理块中', '该题暂无解析', '557a6dd');

-- ----------------------------
-- Table structure for score
-- ----------------------------
DROP TABLE IF EXISTS `score`;
CREATE TABLE `score` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '成绩id',
  `student_id` bigint NOT NULL COMMENT '学生id',
  `exam_id` int DEFAULT NULL COMMENT '试卷id',
  `course_id` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '课程id',
  `clazz_id` int DEFAULT NULL COMMENT '班级id',
  `score` int DEFAULT NULL COMMENT '成绩',
  `quantity` int DEFAULT NULL COMMENT '试卷题量',
  `answer` json DEFAULT NULL COMMENT '学生选择的答案<试卷题号，答案实际值>',
  PRIMARY KEY (`id`),
  KEY `student_id` (`student_id`),
  KEY `course_id` (`course_id`),
  KEY `exam_id` (`exam_id`),
  KEY `clazz_id` (`clazz_id`)
) ENGINE=InnoDB AUTO_INCREMENT=998964 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- ----------------------------
-- Records of score
-- ----------------------------
INSERT INTO `score` VALUES ('274943', '2019213106', '1006', '431e78c', '1921804', '20', '5', '{\"1\": \"是\", \"2\": \"EDPS（电子数据处理系统）\", \"3\": \"程序系统\", \"4\": \"详细设计\", \"5\": \"循环覆盖\"}');
INSERT INTO `score` VALUES ('398231', '2019213106', '1002', '557a6dd', '1921804', '60', '5', '{\"1\": \"DSS（决策支持系统）\", \"2\": \"数据建模\", \"3\": \"需求规格说明书\", \"4\": \"把待开发的软件系统模块化，将每个模块作为一个增量组件，从而分批次地分析、设计、编码和测试这些增量组件\", \"5\": \"数据流图\"}');

-- ----------------------------
-- Table structure for student
-- ----------------------------
DROP TABLE IF EXISTS `student`;
CREATE TABLE `student` (
  `id` bigint NOT NULL COMMENT '学生id',
  `password` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '学生密码',
  `name` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '学生姓名',
  `birthday` date DEFAULT NULL COMMENT '学生生日',
  `age` int DEFAULT NULL COMMENT '学生年龄',
  `sex` varchar(5) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '学生性别',
  `phone` bigint DEFAULT NULL COMMENT '学生电话',
  `clazz_id` int DEFAULT NULL COMMENT '学生班级',
  PRIMARY KEY (`id`),
  KEY `clazz_id` (`clazz_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- ----------------------------
-- Records of student
-- ----------------------------
INSERT INTO `student` VALUES ('20220101', '123456zhou', '贾昊空', '2006-01-01', '16', '男', '11223344556', '1921805');
INSERT INTO `student` VALUES ('20220102', '123456', '卢向珊', '2006-01-01', '16', '女', '123456789', null);
INSERT INTO `student` VALUES ('20220103', '123456', '彭晓博', '2006-01-01', '16', '男', '123456789', null);
INSERT INTO `student` VALUES ('20220104', '123456', '张微澜', '2006-01-01', '16', '女', '123456789', null);
INSERT INTO `student` VALUES ('20220105', '123456', '夏子蕙', '2006-01-01', '16', '女', '123456789', null);
INSERT INTO `student` VALUES ('20220106', '123456', '唐文成', '2006-01-01', '16', '男', '123456789', null);
INSERT INTO `student` VALUES ('20220107', '123456', '邓涵雁', '2006-01-01', '16', '女', '123456789', null);
INSERT INTO `student` VALUES ('20220108', '123456', '贺暖暖', '2006-01-01', '16', '女', '123456789', null);
INSERT INTO `student` VALUES ('20220109', '123456', '黄翠玲', '2006-01-01', '16', '女', '123456789', null);
INSERT INTO `student` VALUES ('20220110', '123456', '蒋彭彭', '2006-01-01', '16', '男', '123456789', null);
INSERT INTO `student` VALUES ('20220201', '123456', '尹友琴', '2006-01-01', '16', '女', '123456789', '1921803');
INSERT INTO `student` VALUES ('20220202', '123456', '杜飞星', '2006-01-01', '16', '男', '123456789', '1921803');
INSERT INTO `student` VALUES ('20220203', '123456', '卢承天', '2006-01-01', '16', '男', '123456789', '1921803');
INSERT INTO `student` VALUES ('20220204', '123456', '周云露', '2006-01-01', '16', '女', '123456789', '1921803');
INSERT INTO `student` VALUES ('20220205', '123456', '吕阳州', '2006-01-01', '16', '男', '123456789', '1921803');
INSERT INTO `student` VALUES ('20220206', '123456', '戴承望', '2006-01-01', '16', '男', '123456789', '1921803');
INSERT INTO `student` VALUES ('20220207', '123456', '程涵蕾', '2006-01-01', '16', '女', '123456789', '1921803');
INSERT INTO `student` VALUES ('20220208', '123456', '孙愉婉', '2006-01-01', '16', '女', '123456789', '1921805');
INSERT INTO `student` VALUES ('20220209', '123456', '孔哲瀚', '2006-01-01', '16', '男', '123456789', '1921805');
INSERT INTO `student` VALUES ('20220210', '123456', '陈雨华', '2006-01-01', '16', '男', '123456789', '1921806');
INSERT INTO `student` VALUES ('20220301', '123456', '秦琴雪', '2006-01-01', '16', '女', '123456789', '1921806');
INSERT INTO `student` VALUES ('20220302', '123456', '乔星渊', '2006-01-01', '16', '男', '123456789', '1921806');
INSERT INTO `student` VALUES ('20220303', '123456', '文丝微', '2006-01-01', '16', '女', '123456789', '1921806');
INSERT INTO `student` VALUES ('20220304', '123456', '卢淑雅', '2006-01-01', '16', '女', '123456789', '1921804');
INSERT INTO `student` VALUES ('20220305', '123456', '尹怡月', '2006-01-01', '16', '女', '123456789', '1921804');
INSERT INTO `student` VALUES ('20220306', '123456', '罗凯泽', '2006-01-01', '16', '男', '123456789', '1921805');
INSERT INTO `student` VALUES ('20220307', '123456', '宋智志', '2006-01-01', '16', '男', '123456789', '1921805');
INSERT INTO `student` VALUES ('20220308', '123456', '夏雨珍', '2006-01-01', '16', '女', '123456789', '1921804');
INSERT INTO `student` VALUES ('20220309', '123456', '孟慕凝', '2006-01-01', '16', '女', '123456789', '1921804');
INSERT INTO `student` VALUES ('20220310', '123456', '戴鸿羲', '2006-01-01', '16', '男', '123456789', '1921804');
INSERT INTO `student` VALUES ('2019213105', '123456', '刘备', null, null, null, null, '1921804');
INSERT INTO `student` VALUES ('2019213106', '123456', '黎海涛', '2001-02-04', '22', '男', '18870493682', '1921804');
INSERT INTO `student` VALUES ('2019213288', '123456', '黄威', '2022-06-04', '22', '男', '16598745352', '1921804');
INSERT INTO `student` VALUES ('2019236985', '123456', '小王', '2001-07-04', '22', '男', '12356874520', '1921805');
INSERT INTO `student` VALUES ('2019255487', '123456', '小刚', '2001-07-04', '22', '男', '12356874520', '1921803');
INSERT INTO `student` VALUES ('2019255648', '123456', '小红', '2001-07-04', '22', '女', '12356874520', '1921802');
INSERT INTO `student` VALUES ('2019368754', '123456', '小六', '2001-07-04', '22', '男', '12356874520', '1921805');

-- ----------------------------
-- Table structure for stu_course
-- ----------------------------
DROP TABLE IF EXISTS `stu_course`;
CREATE TABLE `stu_course` (
  `student_id` bigint NOT NULL COMMENT '学生id',
  `course_id` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '课程id',
  PRIMARY KEY (`student_id`),
  KEY `course_id` (`course_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- ----------------------------
-- Records of stu_course
-- ----------------------------
INSERT INTO `stu_course` VALUES ('2019213106', 'BC001');

-- ----------------------------
-- Table structure for stu_exam
-- ----------------------------
DROP TABLE IF EXISTS `stu_exam`;
CREATE TABLE `stu_exam` (
  `student_id` bigint NOT NULL COMMENT '学生id',
  `exam_id` int DEFAULT NULL COMMENT '试卷id',
  `quantity` int DEFAULT NULL COMMENT '试卷题目量',
  `answer` json DEFAULT NULL COMMENT '学生实际答案<题号，实际答案>',
  PRIMARY KEY (`student_id`),
  KEY `exam_id` (`exam_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- ----------------------------
-- Records of stu_exam
-- ----------------------------

-- ----------------------------
-- Table structure for teacher
-- ----------------------------
DROP TABLE IF EXISTS `teacher`;
CREATE TABLE `teacher` (
  `id` bigint NOT NULL COMMENT '教师id',
  `password` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '教师密码',
  `name` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '教师姓名',
  `birthday` date DEFAULT NULL COMMENT '教师生日',
  `age` int DEFAULT NULL COMMENT '教师年龄',
  `sex` varchar(5) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '教师性别',
  `phone` bigint DEFAULT NULL COMMENT '教师电话',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- ----------------------------
-- Records of teacher
-- ----------------------------
INSERT INTO `teacher` VALUES ('1001', '123456', '李高歌', '1992-01-01', '30', '男', '123456789');
INSERT INTO `teacher` VALUES ('1002', '123456', '杜正真', '1992-01-01', '30', '男', '123456789');
INSERT INTO `teacher` VALUES ('1003', '123456', '尹光启', '1992-01-01', '30', '男', '123456789');
INSERT INTO `teacher` VALUES ('1004', '123456', '陈飞鸣', '1992-01-01', '30', '男', '123456789');
INSERT INTO `teacher` VALUES ('1005', '123456', '康溥心', '1992-01-01', '30', '男', '123456789');
INSERT INTO `teacher` VALUES ('1006', '123456', '谭乐逸', '1992-01-01', '30', '男', '123456789');
INSERT INTO `teacher` VALUES ('1007', '123456', '何华茂', '1992-01-01', '30', '男', '123456789');
INSERT INTO `teacher` VALUES ('1008', '123456', '林伟毅', '1992-01-01', '30', '男', '123456789');
INSERT INTO `teacher` VALUES ('1009', '123456', '梁博超', '1992-01-01', '30', '男', '123456789');
INSERT INTO `teacher` VALUES ('1010', '123456', '彭光赫', '1992-01-01', '30', '男', '123456789');
INSERT INTO `teacher` VALUES ('1011', '123456', '叶暖梦', '1992-01-01', '30', '女', '123456789');
INSERT INTO `teacher` VALUES ('1012', '123456', '薛笑柳', '1992-01-01', '30', '女', '123456789');
INSERT INTO `teacher` VALUES ('1013', '123456', '李千兰', '1992-01-01', '30', '女', '123456789');
INSERT INTO `teacher` VALUES ('1014', '123456', '邱彤霞', '1992-01-01', '30', '女', '123456789');
INSERT INTO `teacher` VALUES ('1015', '123456', '侯蝶梦', '1992-01-01', '30', '女', '123456789');
INSERT INTO `teacher` VALUES ('1016', '123456', '袁华芝', '1992-01-01', '30', '女', '123456789');
INSERT INTO `teacher` VALUES ('1017', '123456', '彭碧彤', '1992-01-01', '30', '女', '123456789');
INSERT INTO `teacher` VALUES ('1018', '123456', '郭菁菁', '1992-01-01', '30', '女', '123456789');
INSERT INTO `teacher` VALUES ('1019', '123456', '赵梦旋', '1992-01-01', '30', '女', '123456789');
INSERT INTO `teacher` VALUES ('1020', '123456', '吴晏然', '1992-01-01', '30', '女', '123456789');
INSERT INTO `teacher` VALUES ('100001', '123456', '王维', '1990-02-15', '32', '男', '15469875216');
INSERT INTO `teacher` VALUES ('100002', '123456', '杜甫', '1990-02-15', '32', '男', '15469875217');
INSERT INTO `teacher` VALUES ('100003', '123456', '李白', '1990-02-15', '32', '男', '15469875215');
INSERT INTO `teacher` VALUES ('100004', '123456', '王之涣', '1990-02-15', '32', '男', '15469870012');

-- ----------------------------
-- Table structure for tea_clazz
-- ----------------------------
DROP TABLE IF EXISTS `tea_clazz`;
CREATE TABLE `tea_clazz` (
  `id` int NOT NULL AUTO_INCREMENT,
  `clazz_id` int DEFAULT NULL,
  `teacher_id` bigint DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `clazz_id` (`clazz_id`),
  KEY `teacher_id` (`teacher_id`)
) ENGINE=InnoDB AUTO_INCREMENT=1000 DEFAULT CHARSET=utf8mb3 COLLATE=utf8_unicode_ci;

-- ----------------------------
-- Records of tea_clazz
-- ----------------------------
INSERT INTO `tea_clazz` VALUES ('1', '1921802', '100004');
INSERT INTO `tea_clazz` VALUES ('2', '1921803', '100002');
INSERT INTO `tea_clazz` VALUES ('4', '1921804', '100002');
INSERT INTO `tea_clazz` VALUES ('5', '1921804', '100003');
INSERT INTO `tea_clazz` VALUES ('6', '1921804', '100001');
INSERT INTO `tea_clazz` VALUES ('8', '1921805', '100001');
INSERT INTO `tea_clazz` VALUES ('9', '1921806', '100001');

-- ----------------------------
-- Table structure for tea_course
-- ----------------------------
DROP TABLE IF EXISTS `tea_course`;
CREATE TABLE `tea_course` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '唯一id',
  `course_id` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '课程id',
  `teacher_id` bigint DEFAULT NULL COMMENT '教师id',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- ----------------------------
-- Records of tea_course
-- ----------------------------
INSERT INTO `tea_course` VALUES ('1', '557a6dd', '100001');
INSERT INTO `tea_course` VALUES ('2', '431e78c', '100001');
INSERT INTO `tea_course` VALUES ('3', '431e78c', '100002');
INSERT INTO `tea_course` VALUES ('5', '431e78c', '100005');
INSERT INTO `tea_course` VALUES ('6', '557a6dd', '100001');
