<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.coe.mapper.ExamMapper">
    <resultMap id="BaseResultMap" type="com.coe.entities.Exam">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="teacherId" column="teacher_id" jdbcType="BIGINT"/>
        <result property="courseId" column="course_id" jdbcType="VARCHAR"/>
        <result property="clazzId" column="clazz_id" jdbcType="INTEGER"/>
        <result property="startTime" column="start_time" jdbcType="TIMESTAMP"/>
        <result property="endTime" column="end_time" jdbcType="TIMESTAMP"/>
        <result property="time" column="time" jdbcType="TIME"/>
        <result property="quantity" column="quantity" jdbcType="INTEGER"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <association property="course" select="com.coe.mapper.CourseMapper.getCourseById" column="course_id"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.coe.entities.Exam">
        <result property="question" column="question" jdbcType="LONGNVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,teacher_id,course_id,clazz_id,start_time,end_time,time,quantity,state
    </sql>
    <sql id="Blob_Column_List">
        question
    </sql>
    <insert id="createExam">
        insert into `exam`(id,teacher_id,clazz_id,course_id,start_time,end_time,time,quantity,question,state)
        values(#{id},#{teacherId},#{clazzId},#{courseId},#{startTime},#{endTime},#{time},#{quantity},#{question},0)
    </insert>
    <select id="getExamsByCondition" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from `exam`
            <trim prefix="where" suffixOverrides="and|or">
                <if test="id!=null and id!=0">
                    id=#{id} and
                </if>
                <if test="teacherId!=null and teacherId!=0">
                    teacher_id=#{teacherId} and
                </if>
                <if test="clazzId!=null and clazzId!=0">
                    clazz_id=#{clazzId} and
                </if>
                <if test="courseId!=null and courseId!=''">
                    course_id=#{courseId} and
                </if>
                <if test="quantity!=null and quantity!=0">
                    quantity=#{quantity} and
                </if>
                <if test="state!=null and state!=-1">
                    state=#{state} and
                </if>
            </trim>
    </select>

    <update id="changeState">
        update `exam` set state=#{state} where id=#{id}
    </update>

    <!--    public boolean updateTime(@Param("startTime")Timestamp startTime, @Param("endTime")Timestamp endTime, @Param("time")Time time);-->
    <!--    <update id="updateTime"></update>-->
    <!--    public boolean updateExam(Exam exam);-->
    <update id="updateExam">
        update `exam`
            <set>
<!--                <if test="teacherId!=null">-->
<!--                    teacher_id=#{teacherId},-->
<!--                </if>-->
                <if test="clazzId!=null">
                    clazz_id=#{clazzId},
                </if>
                <if test="courseId!=null">
                    course_id=#{courseId},
                </if>
                <if test="startTime!=null">
                    start_time=#{startTime},
                </if>
                <if test="endTime!=null">
                    end_time=#{endTime},
                </if>
                <if test="time!=null">
                    time=#{time},
                </if>
                <if test="quantity!=null">
                    quantity=#{quantity},
                </if>
                <if test="question!=null">
                    question=#{question},
                </if>
<!--                <if test="state!=null">-->
<!--                    state=#{state},-->
<!--                </if>-->
            </set>
        where id=#{id} and state=0

    </update>
    <delete id="deleteExamById">
        delete from `exam` where id=#{id} and state=0
    </delete>

    <select id="getExams" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from `exam`
    </select>
    <select id="getQuestion" resultType="string">
        select <include refid="Blob_Column_List"/> from `exam` where id=#{id}
    </select>
    <select id="getExamById" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from `exam` where id=#{id}
    </select>
    <select id="countByExamId" resultType="java.lang.Integer">
        select COUNT(*) FROM `exam` WHERE id=#{id}
    </select>
    <select id="getExamIdList" resultType="java.lang.Integer">
        select id from `exam`
    </select>
    <select id="getCourseIdById" resultType="java.lang.String">
        select course_id from `exam` where id=#{id}
    </select>
    <select id="getQuantityById" resultType="java.lang.Integer">
        select quantity from `exam` where id=#{id}
    </select>
    <select id="getStateById" resultType="java.lang.Integer">
        select state from `exam` where id=#{id}
    </select>
</mapper>